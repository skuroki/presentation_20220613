処理を単体で実行できるようにする
→単体でてスト
→コンソールで単体実行
　→ステージングで実行とかすごく楽になる
→seedとかrake taskとかhandlerとかjobから実行
分けるのは自分はservice objectクラスを作ることが多いが、activerecord model classにメソッドはやしても良いだろうし、command/queryクラスも悪くなさそう
　1つのmodel class主体の処理ならmodel class、登場人物が多ければservice object
　基本1処理1クラスなので実装もspecも短く書ける→rubocopと仲良くやれる
　ぶっちゃけcontrollerと切り離せれば何でも
controllerは普段自分でinstance作って動かすことをしない（ちゃんと調べてやればできるかも）
　入力が引数でなくparams渡しになるので、副作用が前提で扱いにくい
2つ以上書いたらもう切り離す、くらいのイメージ
controllerの責務はHTTPに依存する処理であると考える、たまたま処理開始の受け口がHTTPリクエストだというイメージ

テストはmodelで手厚く、requestでさらっと
接合面にバグ（連携ミス、インターフェースの食い違い）が潜むので通しでの確認は最低1パターンほしい（内容を返す場合と空で返す場合で1つづつ、とか）
　レスポンスの返し方ごとに1つづつというイメージ

俺たちはDHHの言うことに従わなくても別に良い、なぜなら状況が違うから
